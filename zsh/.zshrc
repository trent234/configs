# trent wilson
# prereqs:
# install zsh, chsh, fzf needed for zsh-interactive-cd
# install custom plugins listed below starting with PLUGIN

# PLUGIN git-prompt / vi-mode
# sets prompt has nice git functionality and vi mode indicator lumped in
# https://github.com/woefe/git-prompt.zsh 
# and wget https://raw.githubusercontent.com/woefe/vi-mode.zsh/master/vi-mode.zsh
source ~/.zsh/git-prompt.zsh/vi-mode.zsh
source ~/.zsh/git-prompt.zsh/git-prompt.zsh
source ~/.zsh/git-prompt.zsh/examples/wprompt.zsh

# PLUGIN zsh-autosuggestions
# https://github.com/zsh-users/zsh-autosuggestions
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=3"

# PLUGIN zsh-interactive-cd
# https://github.com/changyuheng/zsh-interactive-cd
source ~/.zsh/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh

# PLUGIN fast-syntax-highlighting
# https://github.com/zdharma/fast-syntax-highlighting
source ~/.zsh/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh

# User configuration
# some inspo from 
# https://callstack.com/blog/supercharge-your-terminal-with-zsh/
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
#setopt share_history # share history between different instances of the shell

setopt correct_all # autocorrect commands
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match

# generic env variables
EDITOR='nvim'

alias vi="nvim"
alias "git-log"="git log --graph --decorate --pretty=oneline --abbrev-commit"

# arrow scroll through suggestions per
# https://github.com/zsh-users/zsh-autosuggestions/issues/303
# zle defs here- https://github.com/zsh-users/zsh/blob/master/Functions/Zle/up-line-or-beginning-search
# how can i mod this and incorporate it into vi-mode so vi up goes through
# but doesn't move cursor. THEN it already has "forward-word" widget to 
# partially accept it until i want to diverge...

autoload -Uz up-line-or-beginning-search
autoload -Uz down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# autocompletion 
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-]=** r:|=**'
zstyle ':completion:*' use-compctl false
zstyle :compinstall filename '/home/trent/.zshrc'
autoload -Uz compinit
compinit

# autocompletion for terraform
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

###### act-on specific
PATH=/opt/homebrew/Cellar/maven@3.5/3.5.4_1/bin:$PATH

##### autogenerated by -> echo eval "$(jenv init -)" >> ~/.zshrc
eval export PATH="/Users/trent.wilson/.jenv/shims:${PATH}"
export JENV_SHELL=zsh
export JENV_LOADED=1
unset JAVA_HOME
source '/opt/homebrew/Cellar/jenv/0.5.4/libexec/libexec/../completions/jenv.zsh'
jenv rehash 2>/dev/null
jenv refresh-plugins
source "/Users/trent.wilson/.jenv/plugins/export/etc/jenv.d/init/export_jenv_hook.zsh"
jenv() {
  typeset command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  enable-plugin|rehash|shell|shell-options)
    eval `jenv "sh-$command" "$@"`;;
  *)
    command jenv "$command" "$@";;
  esac
}
